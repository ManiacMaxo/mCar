FROM arm64v8/debian:11 as opencv-builder
ENV DEBIAN_FRONTEND=noninteractive

RUN apt update && \
    apt install -y --no-install-recommends \
    ninja-build libclang-dev clang ca-certificates \
    ffmpeg libavcodec-dev libavformat-dev libswscale-dev \
    git build-essential cmake && \
    update-alternatives --set c++ /usr/bin/clang++ && \
    update-alternatives --set cc /usr/bin/clang

# also change OPENCV_LINK_LIBS to opencv_world{version_without_dot} when changing version
RUN git clone --depth 1 --branch 4.7.0 https://github.com/opencv/opencv.git /opencv
RUN mkdir /opencv/build
WORKDIR /opencv/build

RUN cmake -GNinja -DOPENCV_GENERATE_PKGCONFIG=YES /opencv && ninja
RUN ninja install

FROM arm64v8/debian:11 as builder

RUN apt update && \
    apt install -y \
    g++-arm-linux-gnueabihf gcc-arm-linux-gnueabihf curl && \
    rm -f /usr/bin/cc; ln -s /usr/bin/arm-linux-gnueabihf-gcc /usr/bin/cc

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"
RUN rustup target add armv7-unknown-linux-gnueabihf

ENV OPENCV_INCLUDE_PATHS=/opt/opencv/include
ENV OPENCV_LINK_PATHS=/opt/opencv/lib
ENV OPENCV_LINK_LIBS=opencv_world470
ENV OPENCV_DISABLE_PROBES=pkg_config,cmake,vcpkg_cmake,vcpkg

RUN mkdir -p /opt/opencv
COPY --from=opencv-builder /usr/local/include/opencv4 /opt/opencv/include
COPY --from=opencv-builder /opencv/build/lib /opt/opencv/lib
